<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Troupon.Catalog.Service.Api</name>
    </assembly>
    <members>
        <member name="M:Troupon.Catalog.Service.Api.Controllers.CatalogController.Search(Troupon.Catalog.Core.Domain.InputModels.SearchDealsFilter,System.Threading.CancellationToken)">
            <summary>
            Gets all active Deals
            </summary>
            <returns>List of Deal Dtos</returns>
        </member>
        <member name="M:Troupon.Catalog.Service.Api.Controllers.CatalogController.Get(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets a specific Deal
            </summary>
            <returns>Returns a Deal Dto</returns>
        </member>
        <member name="M:Troupon.Catalog.Service.Api.Controllers.CatalogController.Post(Troupon.Catalog.Core.Application.Commands.CreateDealCommand,System.Threading.CancellationToken)">
            <summary>
            Create a new Deal
            </summary>
            <returns>Returns the Deal created</returns>
            <response code="201">Returned if the Deal was Created</response>
            <response code="400">Returned if the model couldn't be parsed or the customer couldn't be found</response>
            <response code="406">Returned if no response found with an acceptable format</response>
            <response code="422">Returned when the validation failed</response>
        </member>
        <member name="M:AppNameSpace.swagger1Client.TokenAsync">
            <returns>Success</returns>
            <exception cref="T:AppNameSpace.ApiException">A server side error occurred.</exception>
        </member>
        <member name="M:AppNameSpace.swagger1Client.TokenAsync(System.Threading.CancellationToken)">
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>Success</returns>
            <exception cref="T:AppNameSpace.ApiException">A server side error occurred.</exception>
        </member>
        <member name="M:AppNameSpace.swagger1Client.EngineTrackerAsync(AppNameSpace.SearchEngineTrackerInput)">
            <summary>Gets enginetracker data</summary>
            <returns>Success</returns>
            <exception cref="T:AppNameSpace.ApiException">A server side error occurred.</exception>
        </member>
        <member name="M:AppNameSpace.swagger1Client.EngineTrackerAsync(AppNameSpace.SearchEngineTrackerInput,System.Threading.CancellationToken)">
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <summary>Gets enginetracker data</summary>
            <returns>Success</returns>
            <exception cref="T:AppNameSpace.ApiException">A server side error occurred.</exception>
        </member>
        <member name="M:AppNameSpace.swagger1Client.IncidentAsync(AppNameSpace.IncidentSearchInput)">
            <summary>Gets incidents modified from a given modified date</summary>
            <returns>Success</returns>
            <exception cref="T:AppNameSpace.ApiException">A server side error occurred.</exception>
        </member>
        <member name="M:AppNameSpace.swagger1Client.IncidentAsync(AppNameSpace.IncidentSearchInput,System.Threading.CancellationToken)">
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <summary>Gets incidents modified from a given modified date</summary>
            <returns>Success</returns>
            <exception cref="T:AppNameSpace.ApiException">A server side error occurred.</exception>
        </member>
        <member name="M:AppNameSpace.swagger1Client.DealsAllAsync">
            <summary>Gets all active Deals</summary>
            <returns>Success</returns>
            <exception cref="T:AppNameSpace.ApiException">A server side error occurred.</exception>
        </member>
        <member name="M:AppNameSpace.swagger1Client.DealsAllAsync(System.Threading.CancellationToken)">
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <summary>Gets all active Deals</summary>
            <returns>Success</returns>
            <exception cref="T:AppNameSpace.ApiException">A server side error occurred.</exception>
        </member>
        <member name="M:AppNameSpace.swagger1Client.DealsAsync(AppNameSpace.CreateDealModel)">
            <summary>Create a new Deal</summary>
            <returns>Returned if the Deal was Created</returns>
            <exception cref="T:AppNameSpace.ApiException">A server side error occurred.</exception>
        </member>
        <member name="M:AppNameSpace.swagger1Client.DealsAsync(AppNameSpace.CreateDealModel,System.Threading.CancellationToken)">
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <summary>Create a new Deal</summary>
            <returns>Returned if the Deal was Created</returns>
            <exception cref="T:AppNameSpace.ApiException">A server side error occurred.</exception>
        </member>
        <member name="M:AppNameSpace.swagger1Client.Deals2Async(System.Guid)">
            <summary>Gets a specific Deal</summary>
            <returns>Success</returns>
            <exception cref="T:AppNameSpace.ApiException">A server side error occurred.</exception>
        </member>
        <member name="M:AppNameSpace.swagger1Client.Deals2Async(System.Guid,System.Threading.CancellationToken)">
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <summary>Gets a specific Deal</summary>
            <returns>Success</returns>
            <exception cref="T:AppNameSpace.ApiException">A server side error occurred.</exception>
        </member>
    </members>
</doc>
